#include "C:\Users\Valya\CodeBlock\TrigPoly_Pryhodiuk\headers\TrigPoly.h"

int main(){

    //обьявление файлов
    FILE * fileBin;
    //создание файлов
    fileBin = fopen("data.dat", "w+b");


    //обьявление структур
    TrigPoly trigPoly1;
    TrigPoly trigPoly2;
    TrigPoly loadTrig;

    //размерность структур
    int n = 1;
    //printf("Enter size of polynom: ");
    //scanf("%i", &n);
    //n++;

    trigPoly1.n = (n + 1) * SI;
    trigPoly2.n = (n + 1) * SI;

    //выделение динамической памяти для массивов структур
    trigPoly1.a = (double *) calloc(n + 1, SI);
    trigPoly1.b = (double *) calloc(n + 1, SI);
    trigPoly2.a = (double *) calloc(n, SI);
    trigPoly2.b = (double *) calloc(n, SI);

    //задания значения альфа
    trigPoly1.alpha = 0.5*M_PI;
    trigPoly2.alpha = M_PI;

    inputAsTable(&loadTrig);

    //printf("\nEnter coefficients a and b Polynom1: ");
    /*for (int i = 0; i <= n; i++){
        printf("\n\ta[%d] = ", i);
        scanf("%lf", &trigPoly1.a[i]);
        printf("\tb[%i] = ", i);
        scanf("%lf", &trigPoly1.b[i]);
    }

    printf("Enter coefficients a and b Polynom2: ");
    for (int i = 0; i < n; i++){
        printf("\n\ta[%d] = ", i);
        scanf("%lf", &trigPoly2.a[i]);
        printf("\tb[%i] = ", i);
        scanf("%lf", &trigPoly2.b[i]);
    }*/
    /***
    trigPoly1.a[0] = 2485.12346;
    trigPoly1.b[0] = 0;

    trigPoly1.a[1] = 3;
    trigPoly1.b[1] = -7;
    //расчет интеграла тригонометрического полинома в точке alpha
    printf("Integrating: %lf\n", integrate(trigPoly1, 0.5*M_PI, M_PI));

    output(integral(trigPoly1, 4), 0, 3, 0);
    ***/
    trigPoly1.a[0] = 1;
    trigPoly1.b[0] = 1;

    trigPoly1.a[1] = 0;
    trigPoly1.b[1] = 1;

    trigPoly2.a[0] = 1;
    trigPoly2.b[0] = 1;

    trigPoly2.a[1] = 0;
    trigPoly2.b[1] = -1;
    unmul(&trigPoly1, trigPoly2);

    output(trigPoly1, 0, 3, 1);

    //free(trigPoly1.a);
    //free(trigPoly1.b);

/***
    //расчет значения тригонометрического полинома в точке alpha
    printf("\nPolynom: %lf\n", value(trigPoly1));
    //расчет производной тригонометрического полинома в точке alpha
    printf("Derivating: %lf\n", derivative(trigPoly1));
    //расчет интеграла тригонометрического полинома в точке alpha
    printf("Integrating: %lf\n", integral(trigPoly1));
    // сумма тригонометрических полиномов
    printf("poly1 + poly2 = %lf\n", add(trigPoly1, trigPoly2));
    // вычитание тригонометрических полиномов
    printf("poly1 - poly2 = %lf\n", sub(trigPoly1, trigPoly2));
    // умножение тригонометрических полиномов
    printf("poly1 * poly2 = %lf\n", mul(trigPoly1, trigPoly2));
    // вычитание тригонометрических полиномов
    printf("poly1 / poly2 = %lf\n", divv(trigPoly1, trigPoly2));
***/
    output(trigPoly1, 0, 3, 1);
    outputBinaryFile(fileBin, trigPoly1);

     // загрузка с бинарного файла
    TrigPoly loadTrigBin;
    inputBinaryFile(fileBin, &loadTrigBin);

    printf("\nBinary File:\nLoad alpha: %lf\n", loadTrigBin.alpha);
    printf("Load a: ");
    for(int i = 0; i < (int) (loadTrigBin.n/SI); i++) printf("%lf ",loadTrigBin.a[i]);
    printf("\nLoad b: ");
    for(int i = 0; i < (int) (loadTrigBin.n/SI); i++) printf("%lf ",loadTrigBin.b[i]);
    printf("\n");

    // загрузка с text-файла

    inputTextFile("C:\\Users\\Valya\\CodeBlock\\TrigPoly_Pryhodiuk\\tests\\data.txt", &loadTrig);
    output(loadTrig, 0, 4, 4);



    //очищаем память от динамических массивов
    free(trigPoly1.a);
    free(trigPoly1.b);
    //free(trigPoly2.a);
    //free(trigPoly2.b);
    free(loadTrig.a);
    free(loadTrig.b);
    free(loadTrigBin.a);
    free(loadTrigBin.b);

    //закрываем файлы
    fclose(fileBin);

}
